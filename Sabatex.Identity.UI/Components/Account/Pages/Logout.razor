@page "/Account/Logout"
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Login> Localizer


<div class="d-flex justify-content-center ">
    <div class="w-50 mt-4">
@if (isAutenficated)
{

            <h3 class="text-center">@Localizer["Logout from account."]</h3>
        <hr />
    <div>
    <form method="post" @onsubmit="OnSubmitAsync" @formname="logout">
        <AntiforgeryToken />
        <input type="hidden" name="ReturnUrl" value="" />
        <button type="submit" class="w-100 btn btn-lg btn-primary">@Localizer["Log out"]</button>
      </form>
    </div>
}
else
{
            <h3 class="text-center">@Localizer["Loged from account."]</h3>
        <hr />
}
</div>
</div>
@code {
    bool isAutenficated = false;
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        isAutenficated = signInManager.IsSignedIn(HttpContext.User);
    }

    private async Task OnSubmitAsync()
    {

        await signInManager.SignOutAsync();
        NavigationManager.NavigateTo($"Account/Logout", forceLoad: true);
    }

}
