name: Sabatex.RadzenBlazor.Demo
env:
  PUBLISH_DIR: Sabatex.RadzenBlazor.Demo/bin/Release/net8.0/publish/wwwroot

# Controls when the action will run
on:
  push:
    branches: [ master ]
    paths:
      - 'Sabatex.RadzenBlazor.Demo/Sabatex.RadzenBlazor.Demo.csproj'
permissions: 
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: ls
      run : ls -l -R
       
    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to Sabatex.RadzenBlazor
      run: sed -i 's/<base href="\/" \/>/<base href="\/Sabatex.RadzenBlazor\/" \/>/g' Sabatex.RadzenBlazor.Demo/wwwroot/index.html

    - name: Publish app
      run: dotnet publish  Sabatex.RadzenBlazor.Demo/Sabatex.RadzenBlazor.Demo.csproj  -c Release
      
    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    #- name: Change base-tag in index.html from / to BankServiceFor1C8
    #  run: sed -i 's/<base href="\/" \/>/<base href="\/BankServiceFor1C8\/" \/>/g' ${{ env.PUBLISH_DIR }}/index.html
    
    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    #- name: Fix service-worker-assets.js hashes
    #  working-directory: ${{ env.PUBLISH_DIR }}
    #  run: |
    #    jsFile=$(<service-worker-assets.js)
        # remove JavaScript from contents so it can be interpreted as JSON
    #    json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
        # grab the assets JSON array
    #    assets=$(echo "$json" | jq '.assets[]' -c)
    #    for asset in $assets
    #    do
    #      oldHash=$(echo "$asset" | jq '.hash')
          #remove leading and trailing quotes
    #      oldHash="${oldHash:1:-1}"
    #      path=$(echo "$asset" | jq '.url')
          #remove leading and trailing quotes
    #      path="${path:1:-1}"
    #      newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
          
    #      if [ $oldHash != $newHash ]; then
            # escape slashes for json
    #        oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
    #        newHash=$(echo "$newHash" | sed 's;/;\\/;g')
    #        echo "Updating hash for $path from $oldHash to $newHash"
            # escape slashes second time for sed
    #        oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
    #        jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
    #      fi
    #    done

    #    echo -n "$jsFile" > service-worker-assets.js

    - name: GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v4
      with:
        target_branch: gh-pages
        build_dir: ${{ env.PUBLISH_DIR }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FOLDER: ${{ env.PUBLISH_DIR }}
